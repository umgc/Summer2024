// test class for conversion between bean objects and XML.

import 'package:intelligrade/controller/model/beans.dart';
import 'package:intelligrade/controller/model/xml_converter.dart';

void main() {
  String xml = '<?xml version="1.0" encoding="UTF-8"?> <quiz>   <question type="multichoice">     <name>       <text>Basic Data Types</text>     </name>     <questiontext format="html">       <text><![CDATA[Which of the following is NOT a basic data type in most programming languages?]]></text>     </questiontext>     <answer fraction="0">       <text>Integer</text>     </answer>     <answer fraction="0">       <text>Float</text>     </answer>     <answer fraction="100">       <text>Table</text>     </answer>     <answer fraction="0">       <text>Boolean</text>     </answer>   </question>     <question type="truefalse">     <name>       <text>Algorithm Efficiency</text>     </name>     <questiontext format="html">       <text><![CDATA[An algorithm with O(n^2) time complexity is generally more efficient than an algorithm with O(n) time complexity for large inputs.]]></text>     </questiontext>     <answer fraction="0">       <text>True</text>     </answer>     <answer fraction="100">       <text>False</text>     </answer>   </question>     <question type="shortanswer">     <name>       <text>Programming Paradigm</text>     </name>     <questiontext format="html">       <text><![CDATA[What programming paradigm emphasizes the use of objects, classes, and inheritance?]]></text>     </questiontext>     <answer fraction="100">       <text>Object-Oriented Programming</text>     </answer>     <answer fraction="100">       <text>OOP</text>     </answer>   </question>     <question type="essay">     <name>       <text>Importance of Data Structures</text>     </name>     <questiontext format="html">       <text><![CDATA[Explain the importance of data structures in computer science. Discuss at least three different data structures and provide examples of when they might be used in real-world applications.]]></text>     </questiontext>   </question>     <question type="coderunner">     <name>       <text>Simple Function Implementation</text>     </name>     <questiontext format="html">       <text><![CDATA[Write a function in Python that takes a list of numbers as input and returns the sum of all even numbers in the list.]]></text>     </questiontext>     <answer>       <text> def sum_even_numbers(numbers):     return sum(num for num in numbers if num % 2 == 0)       </text>     </answer>   </question> </quiz>';

  String essayXml = '<?xml version="1.0" encoding="UTF-8"?> <quiz>   <question type="essay">     <name>       <text>Dart List Manipulation: Filtering Even Numbers</text>     </name>     <questiontext format="html">       <text><![CDATA[         <p>Write a Dart function called <code>filterEvenNumbers</code> that takes a list of integers as input and returns a new list containing only the even numbers from the input list. Your function should use the following signature:</p>         <pre> List<int> filterEvenNumbers(List<int> numbers)         </pre>         <p>Requirements:</p>         <ul>           <li>Use Dart\'s list methods to implement the filtering logic.</li>           <li>The original list should not be modified.</li>           <li>If the input list is empty, return an empty list.</li>           <li>Include comments to explain your code.</li>         </ul>         <p>Test your function with different input lists to ensure it works correctly.</p>       ]]></text>     </questiontext>     <generalfeedback format="html">       <text><![CDATA[         <h2>Rubric</h2>         <table border="1">           <tr>             <th>Criteria</th>             <th>Points</th>           </tr>           <tr>             <td>Correct implementation of filterEvenNumbers function</td>             <td>40</td>           </tr>           <tr>             <td>Proper use of Dart list methods</td>             <td>20</td>           </tr>           <tr>             <td>Original list not modified</td>             <td>10</td>           </tr>           <tr>             <td>Correct handling of empty input list</td>             <td>10</td>           </tr>           <tr>             <td>Code comments and explanation</td>             <td>10</td>           </tr>           <tr>             <td>Proper testing with different input lists</td>             <td>10</td>           </tr>         </table>       ]]></text>     </generalfeedback>     <defaultgrade>100</defaultgrade>     <penalty>0</penalty>     <hidden>0</hidden>     <responseformat>editor</responseformat>     <responserequired>1</responserequired>     <responsefieldlines>30</responsefieldlines>     <attachments>0</attachments>     <attachmentsrequired>0</attachmentsrequired>     <graderinfo format="html">       <text><![CDATA[         <pre> void main() {   List<int> numbers1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];   List<int> result1 = filterEvenNumbers(numbers1);   print(\'Test 1: \$result1\'); // Expected: [2, 4, 6, 8, 10]   List<int> numbers2 = [1, 3, 5, 7, 9];   List<int> result2 = filterEvenNumbers(numbers2);   print(\'Test 2: \$result2\'); // Expected: []   List<int> numbers3 = [];   List<int> result3 = filterEvenNumbers(numbers3);   print(\'Test 3: \$result3\'); // Expected: [] } List<int> filterEvenNumbers(List<int> numbers) {   // Your implementation here }         </pre>       ]]></text>     </graderinfo>     <responsetemplate><![CDATA[ List<int> filterEvenNumbers(List<int> numbers) {   // Your code here } void main() {   // Test your function here }     ]]></responsetemplate>   </question> </quiz>';

  testConversion(essayXml);
}

void testConversion(String xml) {
  print('XML to Object:');
  print('-----------------');
  Quiz quiz = Quiz.fromXmlString(xml);
  print(quiz);

  print('\nObject to XML:');
  print('-----------------');
  String convertedXml = XmlConverter.convertQuizToXml(quiz, true).toXmlString();
  print(convertedXml);

  print('\nXML back to Object:');
  print('----------------------');
  quiz = Quiz.fromXmlString(convertedXml);
  print(quiz);
}